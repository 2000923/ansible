---
- name: Run the equivalent of "apt-get update"
  ansible.builtin.apt:
    update_cache: true

- name: Pause for 2 minutes to build app cache
  ansible.builtin.pause:
    minutes: 2

- name: Install packages extras
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - "{{ base_packages }}"
    - "{{ packages }}"

# - name: Update packages from local
#   ansible.builtin.apt:
#     upgrade: dist
#     force_apt_get: true

- name: Install package extras
  ansible.builtin.include_tasks:
    file: get_temp_url.yml

- name: Install deb packages
  ansible.builtin.apt:
    deb: "{{ item.package }}"
    state: present
  loop: "{{ url_deb }}"

- name: Install binary script aws
  ansible.builtin.command: ./aws/install
  register: aws_install
  changed_when: aws_install.rc != 0
  args:
    chdir: /tmp/
    executable: /bin/bash
  ignore_errors: true

- name: Install discord new version
  ansible.builtin.apt:
    deb: /tmp/discord.deb
    state: present

- name: Install packages from snap
  community.general.snap:
    name: "{{ item }}"
    state: present
    classic: true
  loop: "{{ snap_packages }}"

# - name: Download tarball in the /opt/
#   ansible.builtin.unarchive:
#     src: /tmp/thunderbird.tar.gz
#     dest: /opt/
#     remote_src: true

- name: Install the inkdrop deb in the pc
  ansible.builtin.apt:
    deb: /tmp/inkdrop.deb

- name: Run install script for fzf
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      echo 'y' | /opt/fzf/./install
  register: fzf_download
  changed_when: fzf_download.rc != 0
  args:
    executable: /bin/bash

# %%%%%%%%%%%%%%%%%%%%%%%%%%% Install clipgrab %%%%%%%%%%%%%%%%%%%%%%%%%

- name: Compile Clipgrab
  ansible.builtin.command:
    cmd: qmake clipgrab.pro
  register: cg_pro_compile
  changed_when: cg_pro_compile.rc != 0
  args:
    chdir: /opt/clipgrab

- name: Make the object clipgrab
  when: cg_pro_compile.rc == 0
  ansible.builtin.command:
    cmd: make
  register: make_clipgrab
  changed_when: make_clipgrab.rc != 0
  args:
    chdir: /opt/clipgrab

- name: Link to clipgrab for /usr/local/bin
  ansible.builtin.file:
    src: /opt/clipgrab/clipgrab
    dest: /usr/local/bin/clipgrab
    owner: root
    group: root
    mode: "0755"
    state: link

- name: Install plugins for nvim with sudo
  community.general.npm:
    name: "{{ item }}"
    global: true
  loop: "{{ npm_packages_sudo }}"

- name: Configure cpan into OS
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      cpanm -n install Neovim::ext
      echo yes | sudo cpan App::cpanminus
  register: cpan_neovim
  changed_when: cpan_neovim.rc != 0
  args:
    executable: /bin/bash

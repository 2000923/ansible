---
- name: Change password authentication for root
  ansible.builtin.shell: |
    set -o pipefail
    echo "root:password" | chpasswd
  register: root_password
  changed_when: root_password.rc != 0
  args:
    executable: /bin/bash

- name: Create groups administrator
  ansible.builtin.group:
    name: eflores
    state: present

- name: Create user administrator
  ansible.builtin.user:
    name: "{{ item }}"
    group: eflores
    groups: users
    state: present
    shell: /bin/bash
    append: true
  loop: "{{ usuarios }}"

- name: Install packages into Redhat
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: present
  loop:
    - cockpit
  when:
    - os_vendor == "rhel"
    - os_maj_release | int > 7

- name: Enable and started services
  when:
    - os_vendor == 'rhel'
    - os_maj_release | int > 7
  ansible.builtin.service:
    name: cockpit
    enabled: true
  register: cockpit_st
  notify: start cockpit

- name: Add users to sudoers.d directory
  ansible.builtin.template:
    src: "usersudoers.j2"
    dest: /etc/sudoers.d/{{ item }}
    mode: "0600"
  loop: "{{ usuarios }}"

- name: Ensures dir exists
  ansible.builtin.file:
    path: "/home/{{ item }}/.ssh"
    state: directory
    owner: "{{ item }}"
    group: eflores
    mode: "0700"
  loop: "{{ usuarios }}"
  when: ansible_distribution != "Solaris"

- name: Ensures dir exists
  ansible.builtin.file:
    path: "/export/home/{{ item }}/.ssh"
    state: directory
    owner: "{{ item }}"
    group: eflores
    mode: "0700"
  loop: "{{ usuarios }}"
  when: ansible_distribution == "Solaris"

- name: Copy publicy key to os vagrant Linux
  ansible.builtin.copy:
    src: "{{ item }}/id_rsa.pub"
    dest: "/home/{{ item }}/.ssh/authorized_keys"
    mode: "0644"
    owner: "{{ item }}"
    group: "eflores"
  loop: "{{ usuarios }}"
  when: os_vendor != 'solaris'

- name: Copy id_rsa.pub to host remote
  ansible.builtin.copy:
    src: "{{ item }}/id_rsa.pub"
    dest: "/export/home/{{ item }}/.ssh/authorized_keys"
    mode: "0644"
    owner: "{{ item }}"
    group: eflores
  loop: "{{ usuarios }}"
  when: os_vendor == 'solaris'

# - name: Configure selinux enabled
#   when:
#     - ( os_vendor == 'rhel' or os_vendor == 'centos' )
#   ansible.posix.selinux:
#     policy: targeted
#     state: enforcing
#   register: selinux_disabled

- name: Configure when selinux is enabled
  when:
    - ( os_vendor == 'rhel' )
    - selinux is defined
  ansible.posix.selinux:
    state: enforcing
    policy: targeted
  register: selinux_disabled
  notify:
    - Reboot if SELinux is changed

# - name: "Reboot to change the permise in selinux"
#   when: selinux_disabled.changed != False
#   ansible.builtin.reboot:
#     reboot_timeout: 3600

- name: Enabled firewalld service
  when:
    - ( os_vendor == 'rhel' or os_vendor == 'centos' )
  ansible.builtin.service:
    name: firewalld
    state: started
    enabled: true

- name: Change language of keyboard us/es
  when: os_vendor == 'debian'
  ansible.builtin.lineinfile:
    path: /etc/default/keyboard
    regexp: "XKBLAYOUT=*"
    line: 'XKBLAYOUT="es"'
  register: change_keyboard
  notify: Execute setupcon

#  - name: If change keyboard is true
#    when: change_keyboard.changed == true
#    ansible.builtin.command: |
#      setupcon
#    register: setupcon_rst
#    changed_when: setupcon_rst.rc != 0

- name: Change enviroment in rhel
  when: os_vendor == 'rhel'
  ansible.builtin.lineinfile:
    path: /etc/environment
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: "^LANG=.*", line: "LANG=en_US.utf-8" }
    - { regexp: "^LC_ALL=.*", line: "LC_ALL=en_US.utf-8" }

- name: Remove ip asigned
  ansible.builtin.lineinfile:
    path: "{{ file_known_hosts }}"
    regexp: "^{{ remove_ip }}.*"
    state: absent
  delegate_to: localhost
